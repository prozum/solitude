environment:
  CoverityProjectToken:
      secure: V5GotoG8lxjyb7J9ErkmDEoRAD1xNOOQ4v9QJ3hqA/Q=
  CoverityNotificationEmail:
      secure: SkMoWnYcCR2QVa8COhA8mwLl7sxjWcIbbC0T5nrJLlM=

init:
# Properties, passed to MSBuild project.
- ps: |
    $env:BuildDir = "$env:APPVEYOR_BUILD_FOLDER\.OUTPUT"
    $env:VersionBuild = "$env:APPVEYOR_BUILD_NUMBER"
    $env:VersionStage = "$env:APPVEYOR_REPO_BRANCH"
    $env:VersionTag = "$env:APPVEYOR_REPO_COMMIT"

install:
  - ps: Start-FileDownload 'http://neo4j.com/artifact.php?name=neo4j-community-2.3.1-windows.zip' -FileName 'c:\projects\solitude\neo4j-community-2.3.1-windows.zip'
  - cmd: 7z x c:\projects\solitude\neo4j-community-2.3.1-windows.zip
  - cmd: c:\projects\solitude\neo4j-community-2.3.1\bin\Neo4jInstaller.bat install
  - ps: Start-Sleep -s 10

before_build:
  - nuget restore
  - cp Solitude.Server/App.config.sample Solitude.Server/App.config
  - cp Solitude.Server.Tests/App.config.sample Solitude.Server.Tests/App.config

build_script:
- ps: |
    $buildCmd = "C:\Program Files (x86)\MSBuild\12.0\bin\msbuild.exe"
    $buildArgs = @(
      "/m",
      "/l:C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll",
      "/p:Configuration=Debug")
    
    # If build is not a scheduled one, then simply build the project with
    # MSBuild.
    "Scheduled build: $env:APPVEYOR_SCHEDULED_BUILD"
    "Forced build: $env:APPVEYOR_FORCED_BUILD"
    if ($env:APPVEYOR_SCHEDULED_BUILD -ne "True" -And $env:APPVEYOR_FORCED_BUILD -ne "True") {
      & $buildCmd $buildArgs
      return
    }
    
    # Else, build project with Coverity Scan.
    "Building project with Coverity..."
    & cov-build.exe --dir cov-int $buildCmd $buildArgs
      
    # Compress results.
    $coverityPublisher =
      "packages\PublishCoverity.0.11.0\PublishCoverity.exe"
    "Compressing Coverity results..."
    & "$coverityPublisher" compress `
      -i "$env:APPVEYOR_BUILD_FOLDER\cov-int" `
      -o "$env:APPVEYOR_BUILD_FOLDER\$env:APPVEYOR_PROJECT_NAME.zip" `
      --overwrite
    
    # Upload results to Coverity server.
    $version = "$env:VersionMajor.$env:VersionMinor.$env:VersionPatch" +
      "-$env:VersionStage+$env:VersionBuild"
    "Uploading Coverity results..."  
    & "$coverityPublisher" publish `
      -t "$env:CoverityProjectToken" `
      -e "$env:CoverityNotificationEmail" `
      -r "$env:APPVEYOR_REPO_NAME" `
      -z "$env:APPVEYOR_BUILD_FOLDER\$env:APPVEYOR_PROJECT_NAME.zip" `
      -d "CI server scheduled build." `
      --codeVersion "$version"

shallow_clone: true

before_test:
 - ps: Start-Process Solitude.Server\bin\Debug\Solitude.Server.exe -nonewwindow

test:
  assemblies:
   - "**\*.Tests.dll"

cache: packages

artifacts:
- path: cov-int\build-log.txt
